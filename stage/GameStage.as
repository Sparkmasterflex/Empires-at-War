package stage {  import dispatch.StageBuildEvent;    import flash.display.MovieClip;  import flash.events.Event;  import flash.text.TextField;    import stage.stage_elements.SectionGrid;    import static_return.GameConstants;    public class GameStage extends MovieClip {	  	/*---- Added Classes ----*/  	public var sGrid:SectionGrid;    public var eaw;  	  	/*---- Arrays & Objects ----*/  	public var sGridArr:Array = new Array();  	public var pieceArray:Array;  	  	/*---- Numbers ----*/  	  	/*---- MovieClips & Strings ----*/  	public var empire;  	public var difficulty;  	public var enemies;        	public function GameStage(params, p) {      eaw = p;//  	  empire = params['empire'].empire;//  	  difficulty = params['game'].difficulty;  	  //enemies = params.enemies;  	  createStage(params);   	}  	  	public function createStage(params) { // TODO: debug dispatchEvent issue        	  var j:uint = 0,  		  k:uint = 0,        stg = params['stage'],  		  section_arr:Array = [stg.section_0, stg.section_1, stg.section_2, stg.section_3, stg.section_4, stg.section_5],        status = int(params['game'].status);            for(var i:uint = 0; i < 6; i++) {    		var randomPos = Math.round(Math.random() * 899),    		sGrid = new SectionGrid(this, i);    		sGrid.x = (3000 * j);    		sGrid.y = (3000 * k);    		sGrid.name = 'section_' + i;    		j++;    		if(j == 3) { j = 0; k++; }    		addChild(sGrid);    		sGridArr.push(sGrid);    		if(status == GameConstants.NEW_GAME) {      		status = i == 5 ? GameConstants.ACTIVE : GameConstants.NEW_GAME;      		sGrid.createLand(randomPos);    		} else {          sGrid.rebuildLand(section_arr[i]);      	}  	  }  	  for(var s:uint = 0; s < sGridArr.length; s++) {    		sGridArr[s].createCoast();    		if(params['game'].status == GameConstants.NEW_GAME) { sGridArr[s].recordSection(status); }    		if(s == (sGridArr.length - 1)) {    		  dispatchEvent(new StageBuildEvent(StageBuildEvent.ALL_DONE, 'yes'));    		  }  	  }  	}    /* Find MapGrid by name attribute     *     * ==== Parameters:     * sq_name:: String     *     * ==== Returns:     * MapGrid     */    public function find_sq(sq_name) {      var section = getChildByName('section_' + sq_name.split('_')[0]);      return section.getChildByName(sq_name);    }  }}